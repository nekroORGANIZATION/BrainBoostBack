name: Backend → Prod (build in GitHub, deploy on PROD)

on:
  push:
    branches: ["main"]
  workflow_dispatch: {}

env:
  REGISTRY: ghcr.io
  OWNER: nekroorganization
  IMAGE_NAME: backend
  IMAGE_TAG: prod

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: main
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_WRITE_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          build-args: |
            BUILD_SHA=${{ github.sha }}

   deploy-to-prod:
    needs: build-and-push
    runs-on: self-hosted
    environment: main
    steps:
      - name: Prepare SSH key
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          # коректно зберігаємо багаторядковий ключ (без ламання переносів)
          printf "%s" "${{ secrets.RANER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # (опціонально, але безпечніше) додамо ключ хоста, щоб не вимикати перевірку
          ssh-keyscan -H "${{ secrets.PROD_TARGET_HOST }}" >> ~/.ssh/known_hosts || true
          chmod 644 ~/.ssh/known_hosts

      - name: Deploy via SSH
        # якщо не хочеш keyscan, можеш повернути StrictHostKeyChecking=no
        run: |
          ssh -i ~/.ssh/id_rsa -o IdentitiesOnly=yes \
            ${{ secrets.RUNNER_USER }}@${{ secrets.PROD_TARGET_HOST }} \
            "cd /opt/myapp && docker compose pull && docker compose up -d"

      - name: Cleanup SSH key
        if: always()
        run: |
          shred -u ~/.ssh/id_rsa || rm -f ~/.ssh/id_rsa
