name: Backend → Prod (build in GitHub, deploy on PROD)

on:
  push:
    branches: ["main"]
  workflow_dispatch: {}

env:
  REGISTRY: ghcr.io
  OWNER: nekroorganization
  IMAGE_NAME: backend
  IMAGE_TAG: prod

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: main
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_WRITE_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          build-args: |
            BUILD_SHA=${{ github.sha }}

  deploy-to-prod:
    needs: build-and-push
    runs-on: self-hosted
    environment: main
    steps:
    - name: Prepare SSH key
      shell: bash
      run: |
        set -euo pipefail
        mkdir -p ~/.ssh && chmod 700 ~/.ssh
        # відновлюємо приватний ключ із base64-секрету
        echo "${{ secrets.RANER_SSH_KEY_B64 }}" | base64 -d | tr -d '\r' > ~/.ssh/ga_ed25519
        chmod 600 ~/.ssh/ga_ed25519
        # known_hosts (можна замінити на StrictHostKeyChecking=no)
        if command -v ssh-keyscan >/dev/null 2>&1; then
          ssh-keyscan -H "${{ secrets.PROD_TARGET_HOST }}" >> ~/.ssh/known_hosts || true
          chmod 644 ~/.ssh/known_hosts
          echo "-o StrictHostKeyChecking=yes" > ~/.ssh/ssh_opts
        else
          echo "-o StrictHostKeyChecking=no" > ~/.ssh/ssh_opts
        fi

    - name: Deploy via SSH
      shell: bash
      run: |
        set -euo pipefail
        OPTS="$(tr '\n' ' ' < ~/.ssh/ssh_opts)"
        ssh -i ~/.ssh/ga_ed25519 -o IdentitiesOnly=yes $OPTS \
          "${{ secrets.RUNNER_USER }}@${{ secrets.PROD_TARGET_HOST }}" \
          '
            set -e
            cd /opt/myapp
            # логінимось у GHCR, якщо зберігаєш креденшали в .env на проді:
            if [ -f .env ]; then set -a; . ./.env; set +a; fi
            if [ -n "${GHCR_READ_TOKEN:-}" ] && [ -n "${GHCR_USER:-}" ]; then
              echo "$GHCR_READ_TOKEN" | docker login ghcr.io -u "$GHCR_USER" --password-stdin || true
            fi
            docker compose pull
            docker compose up -d
          '

    - name: Cleanup SSH key
      if: always()
      run: |
        shred -u ~/.ssh/ga_ed25519 || rm -f ~/.ssh/ga_ed25519
