name: Backend → Prod (build in GitHub, deploy on PROD)

on:
  push:
    branches: ["main"]
  workflow_dispatch: {}

env:
  REGISTRY: ghcr.io
  OWNER: nekroorganization
  IMAGE_NAME: backend
  IMAGE_TAG: prod

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: main
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_WRITE_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          build-args: |
            BUILD_SHA=${{ github.sha }}

  deploy-to-prod:
    needs: build-and-push
    runs-on: self-hosted
    environment: main
    steps:
    - name: Prepare SSH key
      shell: bash
      run: |
        set -euo pipefail
        mkdir -p ~/.ssh && chmod 700 ~/.ssh

        # Декодуємо ключ із Secret (1 рядок base64) і прибираємо CRLF
        echo "${{ secrets.RANER_SSH_KEY_B64 }}" | base64 -d | tr -d '\r' > ~/.ssh/id_ed25519_github
        chmod 600 ~/.ssh/id_ed25519_github

        # Переконаймось, що ключ читається (покаже лише відбиток, не сам ключ)
        ssh-keygen -lf ~/.ssh/id_ed25519_github

        # known_hosts (можна замінити на StrictHostKeyChecking=no, якщо хочеш)
        if command -v ssh-keyscan >/dev/null 2>&1; then
          ssh-keyscan -H "${{ secrets.PROD_TARGET_HOST }}" >> ~/.ssh/known_hosts || true
          chmod 644 ~/.ssh/known_hosts
          echo "-o StrictHostKeyChecking=yes" > ~/.ssh/ssh_opts
        else
          echo "-o StrictHostKeyChecking=no" > ~/.ssh/ssh_opts
        fi

    - name: Deploy via SSH
      shell: bash
      run: |
        set -euo pipefail
        OPTS="$(cat ~/.ssh/ssh_opts)"
        ssh -i ~/.ssh/id_ed25519_github -o IdentitiesOnly=yes $OPTS \
          "${{ secrets.RUNNER_USER }}@${{ secrets.PROD_TARGET_HOST }}" \
          "cd /opt/myapp && docker compose pull && docker compose up -d"

    - name: Cleanup SSH key
      if: always()
      run: |
        shred -u ~/.ssh/id_ed25519_github || rm -f ~/.ssh/id_ed25519_github
