name: Backend â†’ Tester (remote build)

on:
  push:
    branches: [ "dev" ]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: self-hosted
    environment: dev
    steps:
      - uses: actions/checkout@v4

      - name: Set target
        run: |
          echo HOST=${{ secrets.TARGET_HOST }} >> $GITHUB_ENV
          echo USER=${{ secrets.TARGET_USER }} >> $GITHUB_ENV
          echo PORT=${{ secrets.TARGET_SSH_PORT || 22 }} >> $GITHUB_ENV

      - name: Write SSH key & test
        shell: bash
        run: |
          mkdir -p "${{ runner.temp }}"
          KEY="${{ secrets.TARGET_SSH_KEY }}"
          printf '%s\n' "$KEY" | sed 's/\r$//' > "${{ runner.temp }}/k"
          chmod 600 "${{ runner.temp }}/k"
          ssh -i "${{ runner.temp }}/k" -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" echo ok

      - name: Sync code to Tester (/opt/brainboost/src/backend)
        shell: bash
        run: |
          RSYNC_RSH="ssh -i ${{ runner.temp }}/k -p $PORT -o StrictHostKeyChecking=no"
          ssh -i "${{ runner.temp }}/k" -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" \
            "mkdir -p /opt/brainboost/src/backend"
          rsync -az --delete --exclude ".git" --exclude "node_modules" --exclude ".github" \
            -e "$RSYNC_RSH" ./ "$USER@$HOST:/opt/brainboost/src/backend/"

    
      - name: Stop old container (if exists)
        shell: bash
        run: |
          ssh -i "${{ runner.temp }}/k" -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" \
            "docker stop brainboost-back || true && docker rm brainboost-back || true && docker rmi brainboost-back:latest || true"

      - name: Build backend image on Tester
        shell: bash
        run: |
          ssh -i "${{ runner.temp }}/k" -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" \
            "cd /opt/brainboost/src/backend && docker build -t brainboost-back:latest ."

      - name: Free port 8000 on Tester
        shell: bash
        run: |
          ssh -i "${{ runner.temp }}/k" -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" '
            set -e
       
            if [ -f /home/tester/BrainBoostBack/docker-compose.dev.yml ]; then
              docker compose -f /home/tester/BrainBoostBack/docker-compose.dev.yml down || true
            fi

            CID=$(docker ps -q --filter "publish=8000")
            if [ -n "$CID" ]; then
              docker stop $CID || true
              docker rm $CID || true
            fi
          '
          
      - name: Run backend on port 8000
        shell: bash
        run: |
          ssh -i "${{ runner.temp }}/k" -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" \
            "docker run -d --name brainboost-back --restart unless-stopped -p 8000:8000 brainboost-back:latest"
